SeqScan s1occupancy= new SeqScan(tid, WiFioccupancy.getId(), "occupancy");
Impute imp1occupancy = new Impute(new Attribute("occupancy.occupancy"),s1occupancy);
SmartFilter sel1occupancy = new SmartFilter(new Predicate("occupancy.occupancy", Predicate.Op.GREATER_THAN, new IntField(10)), imp1occupancy);
SeqScan s2wifi= new SeqScan(tid, WiFiwifi.getId(), "wifi");
Impute imp2wifi = new Impute(new Attribute("wifi.lid"),s2wifi);
JoinPredicate predName1 = new JoinPredicate("occupancy.lid", Predicate.Op.EQUALS, "wifi.lid");
SmartJoin join1occupancy = new SmartJoin(predName1, sel1occupancy, imp2wifi);
Impute imp3occupancy = new Impute(new Attribute("occupancy.type"),join1occupancy);
List<Attribute> attributes = new ArrayList<>();
attributes.add(new Attribute("occupancy.type"));
attributes.add(new Attribute("wifi.duration"));
Type[] types = new Type[]{Type.INT_TYPE,Type.INT_TYPE};
SmartProject sp1 = new SmartProject(attributes, types, imp3occupancy);
SmartAggregate sp = new SmartAggregate(sp1, "wifi.duration", "occupancy.type", Aggregator.Op.AVG);
return sp;