SeqScan s1users= new SeqScan(tid, WiFiusers.getId(), "users");
SeqScan s2wifi= new SeqScan(tid, WiFiwifi.getId(), "wifi");
SmartFilter sel1wifi = new SmartFilter(new Predicate("wifi.et", Predicate.Op.LESS_THAN, new IntField(5000)), s2wifi);
SmartFilter sel2wifi = new SmartFilter(new Predicate("wifi.st", Predicate.Op.GREATER_THAN, new IntField(2000)), sel1wifi);
JoinPredicate predName1 = new JoinPredicate("users.mac", Predicate.Op.EQUALS, "wifi.mac");
SmartJoin join1users = new SmartJoin(predName1, s1users, sel2wifi);
SeqScan s3occupancy= new SeqScan(tid, WiFioccupancy.getId(), "occupancy");
JoinPredicate predName2 = new JoinPredicate("wifi.lid", Predicate.Op.EQUALS, "occupancy.lid");
SmartJoin join2wifi = new SmartJoin(predName2, join1users, s3occupancy);
List<Attribute> attributes = new ArrayList<>();
attributes.add(new Attribute("users.ugroup"));
attributes.add(new Attribute("wifi.duration"));
Type[] types = new Type[]{Type.INT_TYPE,Type.INT_TYPE};
SmartProject sp1 = new SmartProject(attributes, types, join2wifi);
SmartAggregate sp = new SmartAggregate(sp1, "wifi.duration", "users.ugroup", Aggregator.Op.SUM);
return sp;